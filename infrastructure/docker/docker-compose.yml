version: '3.8'

services:
  # PostgreSQL with TimescaleDB
  postgres:
    image: timescale/timescaledb:latest-pg15
    container_name: brave-forms-postgres
    environment:
      POSTGRES_USER: ${DB_USER:-brave}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-brave_secure_pass}
      POSTGRES_DB: ${DB_NAME:-brave_forms}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=en_US.UTF-8"
    ports:
      - "5434:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-brave}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - brave-network

  # Redis for BullMQ
  redis:
    image: redis:7-alpine
    container_name: brave-forms-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_secure_pass}
    ports:
      - "6381:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - brave-network

  # Backend API
  backend:
    build:
      context: ../..
      dockerfile: infrastructure/docker/Dockerfile.backend
    container_name: brave-forms-backend
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      DATABASE_URL: postgresql://${DB_USER:-brave}:${DB_PASSWORD:-brave_secure_pass}@postgres:5432/${DB_NAME:-brave_forms}?schema=public
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis_secure_pass}@redis:6379
      CLERK_SECRET_KEY: ${CLERK_SECRET_KEY}
      CLERK_PUBLISHABLE_KEY: ${CLERK_PUBLISHABLE_KEY}
      NOAA_API_KEY: ${NOAA_API_KEY}
      OPENWEATHER_API_KEY: ${OPENWEATHER_API_KEY}
      AWS_REGION: ${AWS_REGION:-us-east-1}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME:-brave-forms-photos}
      PORT: 4000
    ports:
      - "4000:4000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./apps/backend/src:/app/src:ro
    networks:
      - brave-network
    restart: unless-stopped

  # Web Frontend (Next.js)
  web:
    build:
      context: ../..
      dockerfile: infrastructure/docker/Dockerfile.web
    container_name: brave-forms-web
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      NEXT_PUBLIC_API_URL: http://backend:4000/graphql
      NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${CLERK_PUBLISHABLE_KEY}
      CLERK_SECRET_KEY: ${CLERK_SECRET_KEY}
    ports:
      - "3003:3000"
    depends_on:
      - backend
    networks:
      - brave-network
    restart: unless-stopped

  # MinIO for local S3 development
  minio:
    image: minio/minio:latest
    container_name: brave-forms-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - brave-network

networks:
  brave-network:
    driver: bridge
    name: brave-forms-network

volumes:
  postgres_data:
    name: brave-forms-postgres-data
  redis_data:
    name: brave-forms-redis-data
  minio_data:
    name: brave-forms-minio-data